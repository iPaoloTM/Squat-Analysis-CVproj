import numpy as np
from scipy.spatial import procrustes
from scipy.linalg import orthogonal_procrustes
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import sys
import json

def main():
                                                                                #squat                                                                                          #squat                                                                                            #squat
    reference_keypositions=[[527, 0], [847, 4250], [872, 4424], [901, 4645], [971, 5174], [992, 5325], [1034, 5914], [1208, 6919], [1226, 7031], [1250, 7350], [1293, 7531], [1302, 7610], [1313, 7931], [1492, 9207], [1549, 9549], [1604, 9983], [1653, 10208], [1665, 10337], [1696, 11142]]

    sample_keypositions=[[502, 1527], [781, 3445], [798, 3564], [826, 3872], [865, 4041], [880, 4174], [920, 4536], [1134, 6119], [1164, 6290], [1201, 6716], [1247, 6887], [1262, 7020], [1305, 7614], [1512, 8921], [1535, 9062], [1587, 9430], [1615, 9647], [1633, 9809], [1678, 10977]]
    
    ZED_total=np.array([
    0.012945607251396311,
    0.01979047843174448,
    0.025046160328231676,
    0.029000592732505548,
    0.047473430239700715,
    0.046611550553030255,
    0.03418029741326114,
    0.014521217975258174,
    0.014679046863962195,
    0.016305745118935868,
    0.02049633361401692,
    0.036501190847386525,
    0.02875525360431801,
    0.016984080282055183,
    0.016937565811938553,
    0.015640647845546796,
    0.022498645575142768,
    0.03360689284208809,
    0.037934145399151686,
    0.031710155608263096,
    0.029402026500940332,
    0.020118200076752316,
    ])

    MOCAP_total=np.array([
    0.006665662060077218,
    0.023990890343200573,
    0.028488509902765836,
    0.027509182479389622,
    0.024333701908422285,
    0.020521657440020002,
    0.022725330728227997,
    0.01944047589459865,
    0.01276650640579494,
    0.02058393661400678,
    0.038767106584526714,
    0.05752618167142754,
    0.03698398168555133,
    0.021213471043889626,
    0.014700342338340994,
    0.022921102794798816,
    0.022429383917958883,
    0.022360582927714475,
    0.03743003464541026,
    0.021143565753846617,
    0.019787473514376586,
    0.028106874727022044,
    ])

    ZED_lower=np.array([
    0.012368257099214347,
    0.027458225950633467,
    0.02993011739157353,
    0.032396651768140654,
    0.045690404982329486,
    0.08082281160892826,
    0.03992966426065376,
    0.025756679845578046,
    0.03355172983870855,
    0.04636759534487456,
    0.07069362693676261,
    0.10728125713488201,
    0.09916852101578298,
    0.04371600669184639,
    0.013118169840834791,
    0.02850490783987519,
    0.045072523760866484,
    0.0828936724195542,
    0.09714293365194425,
    0.07095279533068609,
    0.04123895525218405,
    0.03734893359705505,
    ])

    MOCAP_lower=np.array([
    0.00902089844652786,
    0.015915455105345463,
    0.02608399788562819,
    0.03520597284785008,
    0.053059411610711184,
    0.038373767921952906,
    0.026800151824906984,
    0.02240299379340659,
    0.014712282192392203,
    0.039146751296778824,
    0.0740414131055772,
    0.10810765941481927,
    0.07697667736147615,
    0.04644593552029116,
    0.022808345852462976,
    0.027818621969078076,
    0.041541450431315255,
    0.0577241448182521,
    0.0728046411635883,
    0.04771748230039168,
    0.030893939149788954,
    0.026548201545533962,
    ])

    fig = plt.figure(figsize=(12, 6))
    time = np.arange(len(keypositions))

    # ax1 = fig.add_subplot(131)
    # ax1.plot(time, ZED_total, color='orange')
    # ax1.plot(time, MOCAP_total, color='green')
    # ax1.set_xlabel('Time')
    # ax1.set_ylabel('MPJPE')
    #
    # ax2 = fig.add_subplot(132)
    # ax2.plot(time, ZED_lower, color='orange')
    # ax2.plot(time, MOCAP_lower, color='green')
    # ax2.set_xlabel('T-pose')
    # ax2.set_ylabel('MPJPE')
    # plt.title("MPJPE Lower body")

    ax3 = fig.add_subplot(111)
    ax3.plot(time, ZED_total-MOCAP_total, color='red')
    ax3.set_xlabel('Time')
    ax3.set_ylabel('MPJPE_ZED - MPJPE_MOCAP')

    # ax3 = fig.add_subplot(111)
    # ax3.plot(time, ZED_lower-MOCAP_lower, color='red')
    # ax3.set_xlabel('Time')
    # ax3.set_ylabel('MPJPE_ZED - MPJPE_MOCAP')

    plt.show()

if __name__ == '__main__':
    main()
